// ==UserScript== 
// @name              拒绝打开傻逼百度题库+单词翻译
// @namespace         http://tampermonkey.net/
// @version           0.1
// @author            chai21sks
// @description       在浏览器右上角显示一个文本框，双击英文单词时调用有道翻译API并显示翻译结果【学习自用】
// @match             *://*/*
// @match             *://*.easylearn.baidu.com/*
// @grant             GM_xmlhttpRequest
// @grant             GM_addStyle
// ==/UserScript==
if (window.self != window.top) {
    return; //直接返回
}
let Fanyi_Flag = true;
let selectedText = null;
(function() {
    'use strict';
    // 判断当前网址是否匹配模式
    const currentUrl = window.location.href;
    const pattern1 = /^https?:\/\/([^.]+\.)?easylearn\.baidu\.com\/.*$/;
    const pattern2 = /^https?:\/\/([^.]+\.)?www.baidu.com\/.*$/;
    if (pattern1.test(currentUrl)) {
        // 关闭页面
        window.close();
    } else if (pattern2.test(currentUrl) == false) {
        // 设置文本框
        const textBox = document.createElement('textarea');
        textBox.id = 'myTextBox'; // 添加唯一的ID以便样式应用
        textBox.classList.add('my-extension-style');
        textBox.style.position = 'fixed';
        textBox.style.top = '10px';
        textBox.style.right = '10px';
        textBox.style.width = '200px';
        textBox.style.height = '55px';
        textBox.style.zIndex = '9999';
        textBox.style.color = 'black';
        textBox.style.border = '1px solid #ccc';
        let isDragging = false; // 标记是否正在拖动
        let dragStartX = 0; // 鼠标按下时的初始横坐标
        let dragStartY = 0; // 鼠标按下时的初始纵坐标

        //设置一个按钮
        const button = document.createElement('button');
        button.id = 'myButton'; // 添加唯一的ID以便样式应用
        button.classList.add('my-extension-style');
        button.style.position = 'fixed';
        button.style.top = '10px';
        button.style.right = '220px';
        button.style.width = '50px';
        button.style.height = '55px';
        button.style.zIndex = '9999';
        button.style.color = 'black';
        button.style.border = '1px solid #ccc';

        button.innerHTML = 'EN-<br>ZH-';
        // 创建文本框和按钮
        document.body.appendChild(textBox);
        document.body.appendChild(button);
        // 监听按钮的点击事件
        button.addEventListener('click', function() {
            Fanyi_Flag = !Fanyi_Flag;
            if (Fanyi_Flag == true){
                button.innerHTML = 'EN-<br>ZH-';
            } else {
                button.innerHTML = 'ZH-<br>EN-';
            }
            const selection = window.getSelection();
            selectedText = selection.toString().trim();
            translateWord(selectedText);
        });

        // 监听鼠标按下事件
        textBox.addEventListener('mousedown', function(event) {
            isDragging = true;
            dragStartX = event.clientX;
            dragStartY = event.clientY;
            event.preventDefault(); // 阻止默认行为，避免选中文本等
        });

        // 监听鼠标移动事件
        document.addEventListener('mousemove', function(event) {
            if (isDragging) {
                const deltaX = event.clientX - dragStartX;
                const deltaY = event.clientY - dragStartY;
                textBox.style.top = `${textBox.offsetTop + deltaY}px`;
                textBox.style.left = `${textBox.offsetLeft + deltaX}px`;
                dragStartX = event.clientX;
                dragStartY = event.clientY;
                button.style.top = textBox.style.top;
                button.style.left = `${textBox.offsetLeft + deltaX - 55}px`;
            }
        });

        // 监听鼠标释放事件
        document.addEventListener('mouseup', function(event) {
            isDragging = false;
        });
        // 监听双击事件
        document.addEventListener('dblclick', function (event) {
            const selection = window.getSelection();
            selectedText = selection.toString().trim();
            translateWord(selectedText);
        });

        // 监听键盘按下事件 shift+enter
        document.addEventListener('keydown', function (event) {
            // 检查是否同时按下了 Shift 键和 Enter 键
            if (event.shiftKey && event.key === 'Enter') {
                const selection = window.getSelection();
                selectedText = selection.toString().trim();
                translateWord(selectedText);
            }
        });

        function translateWord(word) {
            textBox.value = ""
            let apiUrl = null;
            if (Fanyi_Flag == true){
                apiUrl = `http://fanyi.youdao.com/translate?doctype=xml&type=EN2ZH_CN&version&i=${encodeURIComponent(word)}`;
            } else {
                apiUrl = `http://fanyi.youdao.com/translate?doctype=xml&type=ZH_CN2EN&version&i=${encodeURIComponent(word)}`;
            }

            // 设置超时定时器
            const delayTimer = setTimeout(function() {
                if(textBox.value == ""){
                    textBox.value = '请求超时';
                }
            }, 2000); // 延时时间设置为 50 毫秒

            //发送数据
            GM_xmlhttpRequest({
                method: 'GET',
                url: apiUrl,
                onload: function(response) {
                    clearTimeout(delayTimer); // 清除延时定时器

                    const xmlData = response.responseText;
                    const parser = new DOMParser();
                    const xmlDoc = parser.parseFromString(xmlData, 'text/xml');
                    const translationNode = xmlDoc.querySelector('translation');
                    if (translationNode) {
                        const translation = translationNode.textContent.trim();
                        // 判断字符串是否包含空格
                        if (word.includes(' ')) {
                            textBox.value = translation;//字符串包含空格，判断为一句话
                        } else {
                            textBox.value = word + ": " + translation;// 字符串不包含空格，判断为一个单词
                        }
                    } else {
                        textBox.value = '翻译失败';
                    }
                }
            });
        };

        // 定义拖动事件处理函数
        function handleDragStart(event) {
            dragStartX = event.clientX;
            dragStartY = event.clientY;
            event.dataTransfer.setData('text/plain', event.target.value);
            event.target.style.opacity = '0.5';
        }

        function handleDrag(event) {
            const deltaX = event.clientX - dragStartX;
            const deltaY = event.clientY - dragStartY;
            textBox.style.top = `${textBox.offsetTop + deltaY}px`;
            textBox.style.left = `${textBox.offsetLeft + deltaX}px`;
            dragStartX = event.clientX;
            dragStartY = event.clientY;
        }

        function handleDragEnd(event) {
            event.target.style.opacity = '1';
        }

        // 绑定拖动事件处理函数
        textBox.addEventListener('dragstart', handleDragStart);
        textBox.addEventListener('drag', handleDrag);
        textBox.addEventListener('dragend', handleDragEnd);

        // 定义全局CSS样式
        GM_addStyle(`
            #myTextBox.my-extension-style {
                position: fixed;
                top: 10px;
                right: 10px;
                width: 200px;
                height: 50px;
                color: black;
                border: 1px solid #ccc;
                /* 其他文本框样式 */
            }

            #myButton.my-extension-style {
                position: fixed;
                top: 10px;
                right: 220px;
                width: 120px;
                height: 50px;
                color: black;
                background-color: rgb(204, 210, 210);
                border: 1px solid #ccc;
                /* 其他按钮样式 */
            }
        `);
    }
})();

